import fitz
import sys  # ← Pythonのバージョンを取得するためにインポート
import DotLegalPad_Config as config

# フォームフィールドを有するは、テンプレートに設定できない
# 又、``DPDocType:notebook`` に設定してもページを追加できない
# その為このテンプレートはドキュメントとして使用し、「サイドノート」をページ追加として扱う

# --- 設定項目 ---

# Config.py からサイズ関連の設定を読み込み反映する
page_size = config.PAGE_SIZE

if page_size == "A4":
    PAGE_WIDTH = 1650
    PAGE_HEIGHT = 2200
    PAGE_DPI = 200
elif page_size == "A5":
    PAGE_WIDTH = 1404
    PAGE_HEIGHT = 1872
    PAGE_DPI = 226
else:
    # デフォルトはA4
    PAGE_WIDTH = 1650
    PAGE_HEIGHT = 2200
    PAGE_DPI = 200

# config.py から設定を読み込む
file_name = f"{config.FILE_NAME}-{page_size}_Form.pdf"
font_path = config.FONT_PATH
font_name = config.FONT_NAME

# --- 1. PDFドキュメントの準備 ---
doc = fitz.open()

# バージョン情報を文字列として作成
producer_text = \
    f"Generated by Python {sys.version.split()[0]} " + \
    f"with PyMuPDF {fitz.version[0]}"

# メタデータを定義
metadata = {
    "producer": producer_text  # 作成者情報としてバージョンを記録
}

# ドキュメントにメタデータを設定
doc.set_metadata(metadata)

# A4サイズのページを追加
page = doc.new_page(width=PAGE_WIDTH, height=PAGE_HEIGHT)


# --- 2. 背景デザインの描画 ---
# 単位の準備 (QUADERNOの解像度(DPI)に基づいてcmを計算する)
cm = PAGE_DPI / 2.54

# 色の準備
color_gray = config.COLOR_LINE
color_red = (1, 0.7, 0.7)

# マージンの設定
header = config.HEADER_POSITION * cm
footer = config.FOOTER_POSITION * cm
left_margin_line = config.LEFT_MARGIN_LINE * cm

# 左側の縦線（リーガルパッド風）を描画
print("  - 縦線を描画中...")
page.draw_line(
    fitz.Point(left_margin_line, 0),
    fitz.Point(left_margin_line, PAGE_HEIGHT),
    color=color_red,
    width=1
)

# 1cm単位の横罫線を描画 (ヘッダー・フッター内は描画しない)
print("  - 横罫線を描画中...")
y = header
while y < PAGE_HEIGHT - footer:
    page.draw_line(
        fitz.Point(0, y),
        fitz.Point(PAGE_WIDTH, y),
        color=color_gray,
        width=0.5
    )
    y += 1 * cm

# 5mm単位のドットを描画 (ヘッダー・フッター内は描画しない)
print("  - ドットを描画中 (時間がかかります)...")

dot_radius = config.DOT_READIUS
x = 0
while x < PAGE_WIDTH:
    print(f"    ドットX座標: {int(x)} / {PAGE_WIDTH}", end='\r', flush=True)

    y = header
    while y < PAGE_HEIGHT - footer:
        page.draw_circle(fitz.Point(x, y),
                         dot_radius,
                         color=color_gray,
                         fill=color_gray)
        y += 0.5 * cm
    x += 0.5 * cm

print("\n背景描画が完了しました。")

# --- 3. フォームウィジェットの追加 ---
print("フォームを追加します...")
page.insert_font(fontfile=font_path, fontname=font_name)

# KEY を読み込む
options = config.OPTIONS

# config.pyからフォームの設定を読み込む
form_width = config.FORM_WIDTH
form_height = 60

# 読み込んだ設定に基づいて座標を計算
x0 = 26
y0 = 13
x1 = x0 + form_width
y1 = y0 + form_height

form_rect = fitz.Rect(x0, y0, x1, y1)

# プロパティ設定
widget = fitz.Widget()
widget.rect = form_rect
widget.field_type = fitz.PDF_WIDGET_TYPE_COMBOBOX
widget.field_flags = fitz.PDF_CH_FIELD_IS_COMBO
widget.field_name = "category_choice"
widget.choice_values = options
widget.text_font = font_name
widget.text_fontsize = 28
widget.field_value = ""

page.add_widget(widget)

# --- 4. PDFを保存 ---
print("PDFを保存します...")
doc.save(file_name)
doc.close()

print(f"リーガルパッド風 フォーム付きテンプレート '{file_name}' を作成しました。")
